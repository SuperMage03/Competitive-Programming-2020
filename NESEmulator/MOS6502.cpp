//
// Created by liyue on 2020-11-22.
//

#include "MOS6502.h"
#include "BUS.h"
#include <iostream>

MOS6502::MOS6502() {
    using classMOS6502 = MOS6502;
    std::cout << this << std::endl;
    reference = {{"BRK", &classMOS6502::BRK, &classMOS6502::IMM, 7},{"ORA", &classMOS6502::ORA, &classMOS6502::IZX, 6},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 3 },{ "ORA", &classMOS6502::ORA, &classMOS6502::ZPG, 3 },{ "ASL", &classMOS6502::ASL, &classMOS6502::ZPG, 5 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "PHP", &classMOS6502::PHP, &classMOS6502::IMP, 3 },{ "ORA", &classMOS6502::ORA, &classMOS6502::IMM, 2 },{ "ASL", &classMOS6502::ASL, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "ORA", &classMOS6502::ORA, &classMOS6502::ABS, 4 },{ "ASL", &classMOS6502::ASL, &classMOS6502::ABS, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },
                 {"BPL", &classMOS6502::BPL, &classMOS6502::REL, 2},{"ORA", &classMOS6502::ORA, &classMOS6502::IZY, 5},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "ORA", &classMOS6502::ORA, &classMOS6502::ZPX, 4 },{ "ASL", &classMOS6502::ASL, &classMOS6502::ZPX, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "CLC", &classMOS6502::CLC, &classMOS6502::IMP, 2 },{ "ORA", &classMOS6502::ORA, &classMOS6502::ABY, 4 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "ORA", &classMOS6502::ORA, &classMOS6502::ABX, 4 },{ "ASL", &classMOS6502::ASL, &classMOS6502::ABX, 7 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },
                 {"JSR", &classMOS6502::JSR, &classMOS6502::ABS, 6},{"AND", &classMOS6502::AND, &classMOS6502::IZX, 6},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "BIT", &classMOS6502::BIT, &classMOS6502::ZPG, 3 },{ "AND", &classMOS6502::AND, &classMOS6502::ZPG, 3 },{ "ROL", &classMOS6502::ROL, &classMOS6502::ZPG, 5 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "PLP", &classMOS6502::PLP, &classMOS6502::IMP, 4 },{ "AND", &classMOS6502::AND, &classMOS6502::IMM, 2 },{ "ROL", &classMOS6502::ROL, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{ "BIT", &classMOS6502::BIT, &classMOS6502::ABS, 4 },{ "AND", &classMOS6502::AND, &classMOS6502::ABS, 4 },{ "ROL", &classMOS6502::ROL, &classMOS6502::ABS, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },
                 {"BMI", &classMOS6502::BMI, &classMOS6502::REL, 2},{"AND", &classMOS6502::AND, &classMOS6502::IZY, 5},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "AND", &classMOS6502::AND, &classMOS6502::ZPX, 4 },{ "ROL", &classMOS6502::ROL, &classMOS6502::ZPX, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "SEC", &classMOS6502::SEC, &classMOS6502::IMP, 2 },{ "AND", &classMOS6502::AND, &classMOS6502::ABY, 4 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "AND", &classMOS6502::AND, &classMOS6502::ABX, 4 },{ "ROL", &classMOS6502::ROL, &classMOS6502::ABX, 7 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },
                 {"RTI", &classMOS6502::RTI, &classMOS6502::IMP, 6},{"EOR", &classMOS6502::EOR, &classMOS6502::IZX, 6},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 3 },{ "EOR", &classMOS6502::EOR, &classMOS6502::ZPG, 3 },{ "LSR", &classMOS6502::LSR, &classMOS6502::ZPG, 5 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "PHA", &classMOS6502::PHA, &classMOS6502::IMP, 3 },{ "EOR", &classMOS6502::EOR, &classMOS6502::IMM, 2 },{ "LSR", &classMOS6502::LSR, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{ "JMP", &classMOS6502::JMP, &classMOS6502::ABS, 3 },{ "EOR", &classMOS6502::EOR, &classMOS6502::ABS, 4 },{ "LSR", &classMOS6502::LSR, &classMOS6502::ABS, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },
                 {"BVC", &classMOS6502::BVC, &classMOS6502::REL, 2},{"EOR", &classMOS6502::EOR, &classMOS6502::IZY, 5},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "EOR", &classMOS6502::EOR, &classMOS6502::ZPX, 4 },{ "LSR", &classMOS6502::LSR, &classMOS6502::ZPX, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "CLI", &classMOS6502::CLI, &classMOS6502::IMP, 2 },{ "EOR", &classMOS6502::EOR, &classMOS6502::ABY, 4 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "EOR", &classMOS6502::EOR, &classMOS6502::ABX, 4 },{ "LSR", &classMOS6502::LSR, &classMOS6502::ABX, 7 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },
                 {"RTS", &classMOS6502::RTS, &classMOS6502::IMP, 6},{"ADC", &classMOS6502::ADC, &classMOS6502::IZX, 6},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 3 },{ "ADC", &classMOS6502::ADC, &classMOS6502::ZPG, 3 },{ "ROR", &classMOS6502::ROR, &classMOS6502::ZPG, 5 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "PLA", &classMOS6502::PLA, &classMOS6502::IMP, 4 },{ "ADC", &classMOS6502::ADC, &classMOS6502::IMM, 2 },{ "ROR", &classMOS6502::ROR, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{ "JMP", &classMOS6502::JMP, &classMOS6502::IND, 5 },{ "ADC", &classMOS6502::ADC, &classMOS6502::ABS, 4 },{ "ROR", &classMOS6502::ROR, &classMOS6502::ABS, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },
                 {"BVS", &classMOS6502::BVS, &classMOS6502::REL, 2},{"ADC", &classMOS6502::ADC, &classMOS6502::IZY, 5},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "ADC", &classMOS6502::ADC, &classMOS6502::ZPX, 4 },{ "ROR", &classMOS6502::ROR, &classMOS6502::ZPX, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "SEI", &classMOS6502::SEI, &classMOS6502::IMP, 2 },{ "ADC", &classMOS6502::ADC, &classMOS6502::ABY, 4 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "ADC", &classMOS6502::ADC, &classMOS6502::ABX, 4 },{ "ROR", &classMOS6502::ROR, &classMOS6502::ABX, 7 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },
                 {"???", &classMOS6502::NOP, &classMOS6502::IMP, 2},{"STA", &classMOS6502::STA, &classMOS6502::IZX, 6},{"???", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "STY", &classMOS6502::STY, &classMOS6502::ZPG, 3 },{ "STA", &classMOS6502::STA, &classMOS6502::ZPG, 3 },{ "STX", &classMOS6502::STX, &classMOS6502::ZPG, 3 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 3 },{ "DEY", &classMOS6502::DEY, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{ "TXA", &classMOS6502::TXA, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{ "STY", &classMOS6502::STY, &classMOS6502::ABS, 4 },{ "STA", &classMOS6502::STA, &classMOS6502::ABS, 4 },{ "STX", &classMOS6502::STX, &classMOS6502::ABS, 4 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 4 },
                 {"BCC", &classMOS6502::BCC, &classMOS6502::REL, 2},{"STA", &classMOS6502::STA, &classMOS6502::IZY, 6},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "STY", &classMOS6502::STY, &classMOS6502::ZPX, 4 },{ "STA", &classMOS6502::STA, &classMOS6502::ZPX, 4 },{ "STX", &classMOS6502::STX, &classMOS6502::ZPY, 4 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 4 },{ "TYA", &classMOS6502::TYA, &classMOS6502::IMP, 2 },{ "STA", &classMOS6502::STA, &classMOS6502::ABY, 5 },{ "TXS", &classMOS6502::TXS, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 5 },{ "STA", &classMOS6502::STA, &classMOS6502::ABX, 5 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },
                 {"LDY", &classMOS6502::LDY, &classMOS6502::IMM, 2},{"LDA", &classMOS6502::LDA, &classMOS6502::IZX, 6},{"LDX", &classMOS6502::LDX, &classMOS6502::IMM, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "LDY", &classMOS6502::LDY, &classMOS6502::ZPG, 3 },{ "LDA", &classMOS6502::LDA, &classMOS6502::ZPG, 3 },{ "LDX", &classMOS6502::LDX, &classMOS6502::ZPG, 3 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 3 },{ "TAY", &classMOS6502::TAY, &classMOS6502::IMP, 2 },{ "LDA", &classMOS6502::LDA, &classMOS6502::IMM, 2 },{ "TAX", &classMOS6502::TAX, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{ "LDY", &classMOS6502::LDY, &classMOS6502::ABS, 4 },{ "LDA", &classMOS6502::LDA, &classMOS6502::ABS, 4 },{ "LDX", &classMOS6502::LDX, &classMOS6502::ABS, 4 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 4 },
                 {"BCS", &classMOS6502::BCS, &classMOS6502::REL, 2},{"LDA", &classMOS6502::LDA, &classMOS6502::IZY, 5},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "LDY", &classMOS6502::LDY, &classMOS6502::ZPX, 4 },{ "LDA", &classMOS6502::LDA, &classMOS6502::ZPX, 4 },{ "LDX", &classMOS6502::LDX, &classMOS6502::ZPY, 4 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 4 },{ "CLV", &classMOS6502::CLV, &classMOS6502::IMP, 2 },{ "LDA", &classMOS6502::LDA, &classMOS6502::ABY, 4 },{ "TSX", &classMOS6502::TSX, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 4 },{ "LDY", &classMOS6502::LDY, &classMOS6502::ABX, 4 },{ "LDA", &classMOS6502::LDA, &classMOS6502::ABX, 4 },{ "LDX", &classMOS6502::LDX, &classMOS6502::ABY, 4 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 4 },
                 {"CPY", &classMOS6502::CPY, &classMOS6502::IMM, 2},{"CMP", &classMOS6502::CMP, &classMOS6502::IZX, 6},{"???", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "CPY", &classMOS6502::CPY, &classMOS6502::ZPG, 3 },{ "CMP", &classMOS6502::CMP, &classMOS6502::ZPG, 3 },{ "DEC", &classMOS6502::DEC, &classMOS6502::ZPG, 5 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "INY", &classMOS6502::INY, &classMOS6502::IMP, 2 },{ "CMP", &classMOS6502::CMP, &classMOS6502::IMM, 2 },{ "DEX", &classMOS6502::DEX, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{ "CPY", &classMOS6502::CPY, &classMOS6502::ABS, 4 },{ "CMP", &classMOS6502::CMP, &classMOS6502::ABS, 4 },{ "DEC", &classMOS6502::DEC, &classMOS6502::ABS, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },
                 {"BNE", &classMOS6502::BNE, &classMOS6502::REL, 2},{"CMP", &classMOS6502::CMP, &classMOS6502::IZY, 5},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "CMP", &classMOS6502::CMP, &classMOS6502::ZPX, 4 },{ "DEC", &classMOS6502::DEC, &classMOS6502::ZPX, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "CLD", &classMOS6502::CLD, &classMOS6502::IMP, 2 },{ "CMP", &classMOS6502::CMP, &classMOS6502::ABY, 4 },{ "NOP", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "CMP", &classMOS6502::CMP, &classMOS6502::ABX, 4 },{ "DEC", &classMOS6502::DEC, &classMOS6502::ABX, 7 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },
                 {"CPX", &classMOS6502::CPX, &classMOS6502::IMM, 2},{"SBC", &classMOS6502::SBC, &classMOS6502::IZX, 6},{"???", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "CPX", &classMOS6502::CPX, &classMOS6502::ZPG, 3 },{ "SBC", &classMOS6502::SBC, &classMOS6502::ZPG, 3 },{ "INC", &classMOS6502::INC, &classMOS6502::ZPG, 5 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 5 },{ "INX", &classMOS6502::INX, &classMOS6502::IMP, 2 },{ "SBC", &classMOS6502::SBC, &classMOS6502::IMM, 2 },{ "NOP", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::SBC, &classMOS6502::IMP, 2 },{ "CPX", &classMOS6502::CPX, &classMOS6502::ABS, 4 },{ "SBC", &classMOS6502::SBC, &classMOS6502::ABS, 4 },{ "INC", &classMOS6502::INC, &classMOS6502::ABS, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },
                 {"BEQ", &classMOS6502::BEQ, &classMOS6502::REL, 2},{"SBC", &classMOS6502::SBC, &classMOS6502::IZY, 5},{"???", &classMOS6502::XXX, &classMOS6502::IMP, 2 },{"???", &classMOS6502::XXX, &classMOS6502::IMP, 8 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "SBC", &classMOS6502::SBC, &classMOS6502::ZPX, 4 },{ "INC", &classMOS6502::INC, &classMOS6502::ZPX, 6 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 6 },{ "SED", &classMOS6502::SED, &classMOS6502::IMP, 2 },{ "SBC", &classMOS6502::SBC, &classMOS6502::ABY, 4 },{ "NOP", &classMOS6502::NOP, &classMOS6502::IMP, 2 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 },{ "???", &classMOS6502::NOP, &classMOS6502::IMP, 4 },{ "SBC", &classMOS6502::SBC, &classMOS6502::ABX, 4 },{ "INC", &classMOS6502::INC, &classMOS6502::ABX, 7 },{ "???", &classMOS6502::XXX, &classMOS6502::IMP, 7 }};
}

MOS6502::~MOS6502() {}

void MOS6502::clock() {
    if (cycleLeft == 0) {
        curOP = read(PC);
        PC++;

        cycleLeft = reference[curOP].cycles;
        (this->*reference[curOP].AM)();
    }
}


void MOS6502::RST() {
    PC = 0xFFFC;
    SP = 0x0100;
    A = X = Y = 0x00;
}

uint8_t MOS6502::read(uint16_t address) {
    return bus->read(address);
}

void MOS6502::write(uint16_t address, uint8_t data) {
    bus->write(address, data);
}